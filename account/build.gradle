
buildscript {
    ext {
        name = 'Config Server'
        description = 'Config Server demo project'
        version='0.0.1-SNAPSHOT'
        sourceEncoding='UTF-8'
        set('springCloudVersion', "2021.0.0")
        set('springBootVersion', "2.6.1")
    }
    repositories {
        mavenCentral()
        maven {
            allowInsecureProtocol= true
            credentials {
                username NEXUS_USER_NAME
                password NEXUS_PASSWORD
            }
            url NEXUS_MAVEN_URL
        }
    }
}

plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
repositories {
    mavenCentral()
    maven {url 'https://maven.aliyun.com/nexus/content/groups/public/'}
    maven {
        allowInsecureProtocol= true
        credentials {
        username NEXUS_USER_NAME
        password NEXUS_PASSWORD
        }
        url NEXUS_MAVEN_URL}
}

group 'org.example'
version '1.0-SNAPSHOT'

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'javax.validation:validation-api:2.0.0.Final'
    implementation 'com.squareup.okhttp3:okhttp:4.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'
    implementation 'com.wander.cloud.base:utils:0.1.3'
    implementation 'com.wander.cloud.base:net:0.1.7'
    implementation 'com.wander.cloud.common:base:0.2.4'
    implementation 'com.wander.cloud.common:feedback:0.1.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

}

test {
    useJUnitPlatform()
}